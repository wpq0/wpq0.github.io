@mixin transition-delay($duration){
    -webkit-transition-delay: $duration;
    -moz-transition-delay: $duration;
    -o-transition-delay: $duration;
    transition-delay: $duration;
}

@mixin transform($prop:null, $translate:null, $translate3d:null, $rotate:null, $rotate3d:null, $scale:null, $scale3d:null, $skew:null, $matrix:null, $matrix3d:null){
    $transformation: null;	
	@if($prop) {
        $transformation: $prop;
    }
    @else{
        $transformation: #{if($translate, translate(zip($translate)), '')} #{if($translate3d, translate3d(zip($translate3d)), '')} #{if($rotate, rotate($rotate), '')} #{if($rotate3d, rotate3d(zip($rotate3d)), '')} #{if($scale, scale(zip($scale)), '')} #{if($scale3d, scale3d(zip($scale3d)), '')} #{if($skew, skew(zip($skew)), '')} #{if($matrix, matrix(zip($matrix)), '')} #{if($matrix3d, matrix3d(zip($matrix3d)), '')};
    }
    -webkit-transform:$transformation;
    -moz-transform:$transformation;
    -ms-transform:$transformation;
    -o-transform:$transformation;
    transform:$transformation;
}
@mixin box-shadow($shadow){
  -moz-box-shadow:    $shadow;
  -webkit-box-shadow: $shadow;
  box-shadow:         $shadow;
}

@mixin transition($prop:all, $easeFn:linear, $duration:1s, $delay:null){
    @if($prop == 'transform'){
        -moz-transition: -moz-transform $easeFn $duration;
        -o-transition: -o-transform $easeFn $duration;
        -webkit-transition: -webkit-transform $easeFn $duration;
        transition: transform $easeFn $duration;
        -webkit-backface-visibility: hidden;
	    -moz-backface-visibility:    hidden;
	    -ms-backface-visibility:     hidden;
        backface-visibility:     hidden;
    }
    @else{
        -moz-transition: $prop $easeFn $duration;
        -o-transition: $prop $easeFn $duration;
        -webkit-transition: $prop $easeFn $duration;
        transition: $prop $easeFn $duration;
    }
    @if($delay){
        -webkit-transition-delay: $delay;
        -moz-transition-delay: $delay;
        -o-transition-delay: $delay;
        transition-delay: $delay;
    }
}
@mixin border-radius($radius:5px, $corners:null) {
    @if ($corners == null) {
		-webkit-border-radius: $radius;
		-moz-border-radius: $radius;
		border-radius: $radius;
	}
	@else {
		@each $corner in $corners {
			-webkit-border-#{$corner}-radius:$radius;
			-moz-border-radius-#{$corner}:$radius;
			border-#{$corner}-radius:$radius;
		}
	}
}

@mixin center-known-block($width, $height){
    display:block;
    position:absolute;
    margin:0;
    padding:0;
    width:$width;
    height:$height;
    line-height:$height;
    margin-left:-$width/2;
    margin-top:-$height/2;
    left:50%;
    top:50%;
    text-align:center;
}
@mixin keyframes($name){
    @-moz-keyframes #{$name} { @content; }
    @-webkit-keyframes #{$name} { @content; }
    @-o-keyframes #{$name} { @content; }
    @keyframes #{$name}{ @content; }
}
@mixin animation($animation){
    -moz-animation:		$animation;
    -o-animation:		$animation;
    -webkit-animation:	$animation;
    animation:			$animation;
}

@include keyframes(sass-logo-fade-out){
    0%{
        opacity:1;
    }
    100% {
        opacity:0;
    }
}
@include keyframes(sass-logo-fade-in){
    0%{
        opacity:0;
    }
    100% {
        opacity:1;
    }
}

#slide-superset {
    $base-feature-color: #6b03ae;
    $circle-size: 80px;
    $transition-duration: 330ms;
    @include border-radius(100%);
    $count: 8;
    $angle: 360deg/8;

    .canvas {
        background: transparent;
    }

    .sass-features {
        width: 400px;
        height: 400px;
        @include border-radius(100%);
        background: #24013a;
        position: relative;

        &:after {
            display: block;
            content: " ";
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            background: url(/images/sass.svg) center center no-repeat;
            background-size: contain;
            opacity: 1;
            @include animation(sass-logo-fade-in);
            @include transition-delay($transition-duration * 3);
        }
    }


    .feature {
        &.add {
            width: 100%;
            height: $circle-size;
            line-height: $circle-size;
            left: 0;
            top: 50%;
            margin-top: -$circle-size/2;
            position: absolute;
            color: transparent;

            &:after {
                display: block;
                position: absolute;
                width: $circle-size;
                height: $circle-size;
                text-align: center;
                top: 0;
                right: 10px;
                color: white;
                content: attr(title);
                @include border-radius(100%);
                @include transition(transform, ease, $transition-duration);
            }



            @for $i from 1 through $count {
                &:nth-child(#{$count}n+#{$i}) {
                    @include transform($rotate:$angle * ($i - 3));

                    &:after {
                        background-color: lighten($base-feature-color, $i*5%);
                        @include transform($translate:-100% 0, $rotate:-$angle * ($i - 3), $scale:0.0);
                        @include transition-delay($transition-duration + $i * $transition-duration/8);
                    }
                }
            }
        }

        &.core {
            $big-circle-size: $circle-size *2;
            background-color: $base-feature-color;
            font-size:4rem;
            @include border-radius(100%);
            @include center-known-block($big-circle-size, $big-circle-size);
            @include transform($scale:0.0);
            @include transition(transform, ease, $transition-duration);
        }
    }

    .sass-features:hover {
        &:after {
            opacity: 0;
            @include animation(sass-logo-fade-out $transition-duration);
        }

        .feature {
            &.add {
                @for $i from 1 through $count {
                    &:nth-child(#{$count}n+#{$i}) {
                        &:after {
                            @include transform($translate:0 0, $rotate:-$angle * ($i - 3), $scale:1);
                        }
                    }
                }
            }

            &.core {
                @include transform($scale:1);
            }
        }
    }
}
